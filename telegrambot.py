import telebot
from telebot import types
import os
from dotenv import load_dotenv
import time
import requests

from DataBase.DataBase_manager import DataBase

load_dotenv()

TOKEN = os.getenv('TOKEN')


# if not TOKEN:
#     raise ValueError('API —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å —Ñ–∞–π–ª .env')
TOKEN = '7720424435:AAFBMZ0nei9lIxCMMsqMi5qL_3d4jOsclNk'

# –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)
WEATHER_KEY = "3c5886bef4ec4a2bba4151833251805"

DataBase_manager = DataBase()
DataBase_manager.create_table_users()
DataBase_manager.create_table_messages()
DataBase_manager.create_table_cities()

def get_weather(city):
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É —Å OpenWeatherMap"""
    url = "http://api.openweathermap.org/data/2.5/weather"
    params = {
        'q': city,
        'appid': WEATHER_KEY,
        'units': 'metric',
        'lang': 'ru'
    }
    responsen = requests.get(url, params=params)

    return responsen.json()

def format_weather(weather_data):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ"""
    return (
        f" –ü–æ–≥–æ–¥–∞ –≤ {weather_data['name']}:\n"
    )
def send_weather_updates(user_id):
    """–§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    while True:
        city = DataBase_manager.get_city(user_id)
        weather = get_weather(city)
        bot.send_message(format_weather(weather))
        time.sleep(86400)

@bot.message_handler(commands=['start'])
def start(message):
    user = message.from_user
    DataBase_manager.save_user(user)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è')
    markup.add(btn1)
    bot.reply_to(message, f'–ü—Ä–∏–≤–µ—Ç, —è —Ç–≤–æ–π –ø–æ–≥–æ–¥–Ω—ã–π –±–æ—Ç.üåç –û–±—Ä–∞—â–∞–π—Å—èüòâ', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def response(message):
    user = message.from_user
    DataBase_manager.save_message(user.id, message.message_id, message.text, message.date)
    if message.text == '–í—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ó–∞–¥–∞—Ç—å –≥–æ—Ä–æ–¥ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è')
        btn2 = types.KeyboardButton('–ù–∞–π—Ç–∏ –ø–æ–≥–æ–¥—É –≤ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—â–µ–º –≥–æ—Ä–æ–¥–µ')
        markup.add(btn1, btn2)
        bot.reply_to(message, '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=markup)
    elif message.text == '–ó–∞–¥–∞—Ç—å –≥–æ—Ä–æ–¥ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        city = message.text
        if len(city) < 2:
            bot.send_message(message.chat.id, "–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ!")
            return
        DataBase_manager.save_city(city)
        bot.send_message(message.chat.id, f"–í–∞—à –≥–æ—Ä–æ–¥ '{city}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
        send_weather_updates(user.id)
        bot.reply_to(message,
                     '–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –≤–∞—à–µ–≥–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –ø–æ–≥–æ–¥—Éüåç',
                     reply_markup=markup)
    elif message.text == '–ù–∞–π—Ç–∏ –ø–æ–≥–æ–¥—É –≤ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—â–µ–º –≥–æ—Ä–æ–¥–µ':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        search_city = message.text
        get_weather(search_city)
        bot.send_message(message.chat.id, f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –≥–æ—Ä–æ–¥–µ {search_city}")

bot.polling()
